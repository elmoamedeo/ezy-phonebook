plugins {
	id 'java'
	id 'pmd'
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.springdoc.openapi-gradle-plugin" version "1.6.0"
	id 'com.diffplug.spotless' version '6.2.0'
}

group = 'ezy.com.phonebook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.0'
	implementation 'org.liquibase:liquibase-core'
	implementation 'com.google.guava:guava:r05'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	//Tests
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")
	testImplementation('uk.org.webcompere:system-stubs-jupiter:2.0.1')
}

tasks.named('test') {
	useJUnitPlatform()
}

pmd {
	toolVersion = '6.35.0'
	ruleSetFiles = files("config/pmd/pmd_rules.xml")
	ruleSets = []
}

pmdMain {
	reports {
		xml.enabled = true
		html.enabled = true
	}
}

spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		palantirJavaFormat()
		endWithNewline()
		removeUnusedImports()
	}
}
